@model TIP.ChefsCorner.BL.Login

@{
    ViewBag.Title = "Create Account";
    //Layout = "~/Views/Shared/_NoNavbar.cshtml";
    if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            }
        </script>
    }
}

<style>
    .title {
        text-indent: 40px;
    }
</style>


<h3>@ViewBag.Message</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="limiter">
        <div class=" container-login100">

            <div class="wrap-login100">
                <form class="login100-form ">
                    <div class="form-horizontal">
                        <span class="login100-form-title p-b-26 mb-5">
                            @ViewBag.Title
                        </span>
                        @*<hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="wrap-input100">
                                @Html.LabelFor(model => model.ScreenName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.ScreenName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ScreenName, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <div class="wrap-input100 ">
                            @* @Html.LabelFor(model => model.ScreenName, htmlAttributes: new { @class = "input100" })*@

                            @Html.EditorFor(model => model.ScreenName, new { htmlAttributes = new { @class = "input100", placeholder = "UserName" } })
                            <span>
                                @Html.ValidationMessageFor(model => model.ScreenName, "", new { @class = "focus-input100" })
                            </span>
                        </div>
                        <div class="wrap-input100 ">
                            @* @Html.LabelFor(model => model.ScreenName, htmlAttributes: new { @class = "input100" })*@

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input100", placeholder = "Email" } })
                            <span>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "focus-input100" })
                            </span>
                        </div>
                        <div class="wrap-input100 " type="text" name="password">
                            @*    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "input100 " })*@

                            @Html.PasswordFor(model => model.Password, new { @class = "input100", @placeholder = "Password" })
                            <span>

                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "focus-input100" })
                            </span>
                        </div>

                        @*<div class="wrap-input100">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="wrap-input100">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                <div class="col-md-offset-2 col-md-4">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>*@

                        <div class="container-login100-form-btn">
                            <div class="wrap-login100-form-btn">
                                <div class="login100-form-bgbtn"></div>
                                <input type="submit" value="Submit" class="login100-form-btn " />

                            </div>



                        </div>
                </form>
            </div>
        </div>
    </div>

}